#summary Links to free & open source Python game programming resources.
#labels Featured

==Python==
  * [http://www.python.org/ Python website]

  * Documentation:
    * [http://www.python.org/doc/ Python documentation]

  * Tutorials:
    * [http://docs.python.org/tutorial/ Official Python tutorial]
    * [http://diveintopython.org/ Dive into Python] by Mark Pilgrim
    * [http://www.greenteapress.com/thinkpython/thinkpython.html How to Think Like a Computer Scientist] by Allen B. Downey 

  * [http://www.stackless.com/ Stackless Python] (used for the [http://www.eveonline.com/ EVE Online] servers, presentation [http://www.slideshare.net/Arbow/stackless-python-in-eve 2006] [http://us.pycon.org/2009/conference/schedule/event/91/ 2009])

  * [http://wiki.python.org/moin/GameProgramming List of Python game programming tools]

  * [http://gpwiki.org/index.php/Python Python on the Game Programming Wiki]

==Pygame==
  * [http://www.pygame.org/ Pygame website]

  * Documentation:
    * [http://www.pygame.org/docs/ Pygame documentation]

  * Tutorials:
    * [http://www.pygame.org/wiki/tutorials Pygame tutorials]
    * [http://www.pygame.org/wiki/CookBook Pygame cookbook]
    * [http://rene.f0o.com/mywiki/PythonGameProgramming Python Game Programming] by Rene Dudfield & Geoff Howland
    * [http://inventwithpython.com/ Invent your own computer games with Python] by Albert Sweigart

  * [http://www.pygame.org/tags/libraries List of Pygame Libraries]

==Networking==
  * Documentation:
    * [http://docs.python.org/library/socket.html Socket] Low-level networking interface

  * Tutorials:
    * [http://www.amk.ca/python/howto/sockets/ Socket Programming HOWTO] by Gordon McMillan
    * [http://www.devshed.com/c/a/Python/Sockets-in-Python-Into-the-World-of-Python-Network-Programming/ Sockets in Python] by A.P.Rajshekhar
    * [http://ilab.cs.byu.edu/python/ Python network programming] by Daniel Zappala
    * [http://gafferongames.com/networking-for-game-programmers/ Networking for game programmers] by Glenn Fiedler
      * [http://code.google.com/p/netgame/ tutorial C++ code]
    * [http://www.flipcode.com/archives/Network_Game_Programming-Issue_01_Things_that_make_you_go_hmm.shtml Network game programming] by Dan Royer
    * [http://www.enchantedage.com/pymmo Write your own MMORPG in four hours using Python] by jwatte

  * Libraries:
    * [http://twistedmatrix.com/trac/ Twisted framework]
      * [http://onlamp.com/pub/a/python/2006/08/10/untwisting-python-network-programming.html Untwisting Python network programming] by Kendrew Lau
      * [http://www.ibm.com/developerworks/linux/library/l-twist1.html Network programming with the Twisted framework] by David Mertz
      * [http://www.artima.com/weblogs/viewpost.jsp?thread=156396 Grokking Twisted] by Bruce Eckel
    * [http://www.pygame.org/project-Mastermind+Networking+Lib-859-.html Mastermind networking lib] (TCP and UDP) by Ian Mallett
      * [http://www.pygame.org/project-Spacewar+Multi-1025-.html Spacewar Multi] example game using TCP
    * [http://code.google.com/p/podsixnet/ Podsixnet game networking library] by Chris McCormick

  * Protocols:
    * [http://en.wikipedia.org/wiki/User_Datagram_Protocol UDP] User Datagram Protocol
      * [http://enet.bespin.org/ enet] builds a protocol on top of UDP
    * [http://twistedmatrix.com/documents/8.1.0/api/twisted.protocols.amp.html AMP] Asynchronous Messaging Protocol
      * [http://www.ripton.net/blog/?p=16 AMP chat example code] by David Ripton
      * [https://launchpad.net/game AMP game example code] by Christopher Armstrong & Jp Calderone
    * Notify: protocol of [http://opentnl.sourceforge.net/doxydocs/fundamentals.html OpenTNL] & [http://github.com/nardo/tnl2 TNL2]
    * [http://en.wikipedia.org/wiki/Transmission_Control_Protocol TCP] Transmission Control Protocol (not to be used in real-time games)

  * [http://gafferongames.com/2009/01/25/game-networking-resources/ List of network resources] by Glenn Fiedler
    
== Graphics ==
  * Documentation:
    * [http://www.opengl.org/documentation/ OpenGL documentation]
    * [http://pyopengl.sourceforge.net/documentation/ PyOpenGL documentation]

  * Tutorials:
    * [http://nehe.gamedev.net/ NeHe OpenGL tutorial] 
      * [http://www.pygame.org/gamelets/games/nehe1-10.zip NeHe Python code]
    * [http://anomtech.uuuq.com/Index.php?page=Tutorials Anomalistic Technologies OpenGL Tutorial]

  * Libraries:
    * [http://pyopengl.sourceforge.net/ PyOpenGL]
      * You may want to use [http://numpy.scipy.org/ NumPy] for [http://www.ruthless.zathras.de/facts/apps/polygonesia/3d-transformation-matrix.php matrix transformations]
    * [http://pyglet.org/ Pyglet multimedia library]
      * [http://www.learningpython.com/2007/11/10/creating-a-game-with-pyglet-and-python/ Pyglet game programming tutorial]
    * [http://code.google.com/p/pgu/ PGU] Phil's Pygame Utilities by Phil Hassey & Peter Rogers
    * [http://code.google.com/p/pygl2d/ PyGL2D] by PyMike
    * [http://www.pygame.org/project-PYGGEL-968-.html PYGGEL] Python Graphical Game Engine + Libraries by RoeBros
    * [http://www.pygame.org/project-glLib+Reloaded-1326-.html glLib Reloaded] by Ian Mallett

  * 2D Engines:
    * [http://matthewmarshall.org/projects/rabbyt/ Rabbyt fast sprite engine] by Matthew Marshall
    * [http://www.alobbs.com/pykyra Pykyra] fast game development framework by Alvaro Lopez Ortega
    * [http://code.google.com/p/flamingoengine/ Flamingo] and [http://pygame.org/project-Opossum+Engine-1340-.html Opossum] 2D game engines by Bradley Zeis

  * 3D Engines:
    * [http://www.blender.org/ Blender 3D] content creation suite
      * [http://wiki.blender.org/index.php/Doc:Manual/Extensions/Python Blender 3D Python scripting]
      * [http://wiki.blender.org/index.php/Extensions:Py/Scripts Blender 3D Python tutorials]
      * [http://www.ruthless.zathras.de/facts/apps/polygonesia/blender.php Death to usability, or learn Blender in 20 minutes nonetheless]
    * [http://www.ogre3d.org/ Ogre] Object-Oriented Graphics Rendering Engine
      * [http://www.ogre3d.org/wiki/index.php/PyOgre PyOgre] Python bindings for Ogre
    * [http://www.crystalspace3d.org/main/Main_Page Crystalspace 3D]
      * [http://www.crystalspace3d.org/main/PyCrystal PyCrystal] Python bindings for CrystalSpace
    * [http://irrlicht.sourceforge.net/ Irrlicht]
      * [https://opensvn.csie.org/traccgi/pyrr Pyrr] Python bindings for Irrlicht (out of date & no longer maintained
    * [http://www.pysoy.org/ pysoy 3D game engine]
    * [http://www.panda3d.org/ Panda 3D]
    * [http://home.gna.org/oomadness/en/soya3d/index.html Soya 3D]

  (What I call an "engine" here is quite a mixed bag: graphics engines and game engines, the difference is not always clear. I also included Blender, since it has -among many other things- a game engine.)

  * [http://www.vrplumber.com/py3d.py List of Python 3D Software]
  * [http://www.moddb.com/engines/ List of game engines] at Mod DB
  * [http://gpwiki.org/index.php/Game_Engines List of game engines] at Game Programming Wiki

== Physics ==
  * Tutorial:
    * [http://gafferongames.com/game-physics/ Game physics tutorial] by Glenn Fiedler

  * Libraries:
    * [http://www.pygame.org/project-pyBox2D-723-.html Pybox 2D] by Ken Lauer
    * [http://www.ode.org/ ODE] Open Dynamics Engine 3D
      * [http://pyode.sourceforge.net/ Pyode] Python bindings for ODE
    * [http://code.google.com/p/bullet/ Bullet 3D] by Erwin Coumans

  * [http://www.adrianboeing.com/pal/index.html PAL: Physics Abstraction Layer] by Adrian Boeing

== Graphical User Interface  ==
  * Libraries:
    * [http://wiki.python.org/moin/TkInter Python's standard TkInter GUI]
      * [http://www.informit.com/articles/article.aspx?p=27103&redir=1 Tutorial: Making a CD Player with pygame and Tkinter in Python] by Harvey Deitel & Paul Deitel
    * [http://www.pygame.org/project-Albow-338-853.html Albow - widgetry for PyGame & PyOpenGL] by Gregory Ewing

  * [http://wiki.python.org/moin/GuiProgramming List of Python GUI tools]

== Artificial Intelligence ==
  * Tutorial:
    * [http://www.policyalmanac.org/games/aStarTutorial.htm A* Pathfinding for Beginners] by Patrick Lester

  * Libraries:
    * [http://www.pygame.org/project-Theseus+V1.0-1426-2533.html Theseus] by Heiko Nolte
    * [http://www.pygame.org/project-Hex+stuff-773-.html Hex Stuff] by Francesco Mastellone
    * [http://www.pygame.org/project-AStar-195-.html AStar] by John Eriksson

  * [http://www.pygame.org/tags/ai List of AI resources] at Pygame

==Game development portals==
  * [http://www.gamedev.net/ GameDev.net]
  * [http://www.gamasutra.com/ Gamasutra.com]
  * [http://www.devmaster.net/ DevMaster.net]
  * [http://aigamedev.com/ AiGameDev.com]
  * [http://www.moddb.com/ ModDB.com]
  * [http://gpwiki.org/ Game Programming Wiki]